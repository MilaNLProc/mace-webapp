language: generic
sudo: required
# cache:
#     bundler: true
#     directories:
#       - $HOME/docker

services:
    - docker

cache:
    directories:
    - docker_images
    
before_install:
    - docker load -i docker_images/images.tar || true
    - docker build -t rstats-data-mvp:latest .

before_cache:
    - docker save -o docker_images/images.tar $(docker images -a -q)

# before_cache:
#     # Save tagged docker images
#     - >
#         mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
#         | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

# before_install:
#     # Load cached docker images
#     - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
#     - docker build -t rstats-data-mvp:latest .

# script:
#     - docker build --target test --progress=plain -t rstats-data-mvp:latest

# after_success:
#     - docker build --target test --progress=plain -t rstats-data-mvp:test .


    # dist: trusty   # Use Ubuntu 14.04 image (instead of 12.04)
    # language: r
    # # sudo: false
    # r: 4.0.2
    
    # # Install packrat if needed and have it restore packages.
    # install:
    #     - R -e 'if (system.file(package="packrat") == "") install.packages("packrat")'
    #     - R -e "packrat::packify(); packrat::restore()"
    
    # cache:
    #   # Main R library
    #   packages: true
    #   directories:
    #     # Packrat packages
    #     - packrat/lib
    #     # PhantomJS
    #     - travis_phantomjs
    
    # # Install PhantomJS (if not cached)
    # before_install:
    #     - echo "options(repos = c(CRAN = 'https://packagemanager.rstudio.com/all/__linux__/xenial/latest'))" >> ~/.Rprofile.site
    #     - echo "options(HTTPUserAgent = paste0('R/', getRversion(), ' R (',
    #          paste(getRversion(), R.version['platform'], R.version['arch'], R.version['os']),
    #          ')'))" >> ~/.Rprofile.site
    
    
    #     - "export PHANTOMJS_VERSION=2.1.1"
    #     - "phantomjs --version"
    #     - "export PATH=$PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin:$PATH"
    #     - "hash -r"
    #     - "phantomjs --version"
    #     - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then rm -rf $PWD/travis_phantomjs; mkdir -p $PWD/travis_phantomjs; fi"
    #     - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then wget https://github.com/Medium/phantomjs/releases/download/v$PHANTOMJS_VERSION/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -O $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2; fi"
    #     - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then tar -xvf $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C $PWD/travis_phantomjs; fi"
    #     - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then hash -r; fi"
    #     - "phantomjs --version"
    
    # script:
    #     - R -f run_tests.R
    